"use strict";function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Node=function e(t){_classCallCheck(this,e),this.value=t,this.left=null,this.right=null},BinarySearchTree=function(){function e(){_classCallCheck(this,e),this.root=null}return _createClass(e,[{key:"insert",value:function(e){var t=new Node(e);if(null===this.root)return this.root=t,this;for(var r=this.root;r;)if(e<r.value){if(null===r.left)return r.left=t,this;r=r.left}else{if(!(e>r.value))return"can not insert "+e+" as this already extists in the BST";if(null===r.right)return r.right=t,this;r=r.right}return this}},{key:"find",value:function(e){if(null===this.root)return!1;for(var t=this.root;t;)if(e<t.value)t=t.left;else{if(!(e>t.value))return!0;t=t.right}return!1}},{key:"BFS",value:function(){var e=[],t=[],r=this.root;for(t.push(r);t.length;)r=t.shift(),e.push(r.value),r.left&&t.push(r.left),r.right&&t.push(r.right);return e}},{key:"DFSPreOrder",value:function(){var r=[];return function e(t){r.push(t.value),t.left&&e(t.left),t.right&&e(t.right)}(this.root),r}},{key:"DFSPostOrder",value:function(){var r=[];return function e(t){t.left&&e(t.left),t.right&&e(t.right),r.push(t.value)}(this.root),r}},{key:"DFSInOrder",value:function(){var r=[];return function e(t){t.left&&e(t.left),r.push(t.value),t.right&&e(t.right)}(this.root),r}}]),e}(),tree=new BinarySearchTree;tree.insert(10),tree.insert(12),tree.insert(15),tree.insert(16),tree.insert(18),tree.insert(7),tree.insert(5),tree.insert(8),tree.insert(3),tree.insert(2),console.log(tree),console.log(tree.BFS()),console.log(tree.DFSPreOrder()),console.log(tree.DFSPostOrder()),console.log(tree.DFSInOrder());