"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,t){if(r){if("string"==typeof r)return _arrayLikeToArray(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return"Map"===(e="Object"===e&&r.constructor?r.constructor.name:e)||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(r,t):void 0}}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}var obj={name:"Abhishek"},getName=function(r,t,e){return this.name+" "+r+" "+t+" "+e},fn1=getName.bind(obj,"Patna",201301,"Bihar"),fn2=(console.log(fn1()),Function.prototype.myCustomBind=function(){for(var r=this,t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(){return r.call.apply(r,[e[0]].concat(_toConsumableArray(e.slice(1))))}},getName.myCustomBind(obj,"Patna",201301,"Bihar"));console.log(fn2());